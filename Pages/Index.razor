@page "/"

@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Web.Virtualization;
@using DocumentFormat.OpenXml;
@using DocumentFormat.OpenXml.Packaging;
@using DocumentFormat.OpenXml.Spreadsheet;
@using PatientsExcelFileReader.Patients;
@using System.Collections.ObjectModel;
@using System.Globalization;


<PageTitle>Patient Excel File Reader</PageTitle>

<InputFile OnChange="@SelectFile" accept=".xlsx" />

@if (file != null)
{
    if (errorMessage == null)
    {
        <p>
        <button type="button" @onclick="ReadFile">Upload  File</button>
        </p>

        <div style="height:200px;overflow-y:scroll" tabindex="-1">
            <table width="450">
                    <thead style="position: sticky; top: 0; background-color: silver">
                        <tr>
                            <th align="left">First Name</th>
                            <th align="left">Last Name</th>
                            <th align="left">Birthday</th>
                            <th align="left">Gender</th>
                        </tr>
                    </thead>
                    <tbody>
                        <Virtualize Items="@allPatients"
                                    SpacerElement="tr">
                                <tr>
                                    <td>@context.FirstName</td>
                                    <td>@context.LastName</td>
                                    <td>@context.Birthday</td>
                                    <td>@context.Gender</td>
                                </tr>
                        </Virtualize>
                    </tbody>
             </table>
        </div>
    }

    <p>@errorMessage</p>

}

@code {
    IBrowserFile? file;
    int MAXFILESIZE = 50000;
    string? errorMessage;
    bool loaded;
    int rowCount;
    Collection<Patients> allPatients = new();

    private void SelectFile(InputFileChangeEventArgs e)
    {
        file = e.File;
        errorMessage = null;
        if ((file.Size >= MAXFILESIZE) ||
        (file.ContentType != "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"))
        {
            errorMessage = "Invalid file";
        }
    }
    private async Task ReadFile()
    {
        try
        {
            var stream = new MemoryStream();
            await file.OpenReadStream(MAXFILESIZE).CopyToAsync(stream);

            SpreadsheetDocument doc = SpreadsheetDocument.Open(stream, false);

            WorkbookPart wbPart = doc.WorkbookPart;

            var sheet = wbPart.Workbook
                  .Descendants<Sheet>()
                  .Where(s => s.Name == "Patients")
                  .FirstOrDefault();

            WorksheetPart wsPart = 
                 (WorksheetPart)(wbPart.GetPartById(sheet.Id));

            SheetData sheetData =
                 wsPart.Worksheet.Elements<SheetData>().First();

            rowCount = sheetData.Elements<Row>().Count();

            var stringTable = wbPart
            .GetPartsOfType<SharedStringTablePart>()
            .FirstOrDefault();
            foreach (Row r in sheetData.Elements<Row>())
            {
                if (r.RowIndex! == 1)
                {
                    continue;
                }
                int col = 1;
                var patients = new Patients();
                foreach (Cell c in r.Elements<Cell>())
                {
                    string value = c.InnerText;
                    if (c.DataType != null)
                    {
                        if (c.DataType.Value == CellValues.SharedString)
                        {
                            value = stringTable.SharedStringTable.ElementAt(int.Parse(value)).InnerText;
                        }

                    }
                    switch (col)
                    {
                        case 1:
                            patients.FirstName = value;
                            break;
                        case 2:
                            patients.LastName = value;
                            break;
                        case 3:
                            patients.Birthday = value;
                            break;
                        case 4:
                            patients.Gender = value;
                            break;
                    }
                    col = col + 1;
                } 
                allPatients.Add(patients);
            }

           
        }
        catch (Exception)
        {
            errorMessage = "Invalid Excel file";
        }

    }

}
